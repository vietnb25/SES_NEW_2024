<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vn.ses.s3m.plus.batch.mapper.DataInverter1ViewMapper">

    <resultMap id="baseResult" type="DataInverter1View">
        <result property="id" jdbcType="BIGINT" column="id" />
        <result property="deviceId" jdbcType="BIGINT" column="device_id" />
        <result property="viewType" jdbcType="INTEGER" column="view_type" />
        <result property="viewTime" jdbcType="VARCHAR" column="view_time" />
        <result property="Ptotal" jdbcType="FLOAT" column="Ptotal" />
        <result property="Pdc" jdbcType="FLOAT" column="Pdc" />
        <result property="Ep" jdbcType="INTEGER" column="Ep" />
        <result property="sentDate" jdbcType="VARCHAR" column="sent_date" />
    </resultMap>
    
    <select id="getCustomerList" parameterType="map" resultType="java.lang.String">
    	SELECT 
			customer_id 
		FROM
			${schema}.${table} A
	    WHERE
            A.delete_flag != 1
    </select>
    
    <select id="selectInverterLastestByDeviceId" parameterType="map" resultMap="baseResult">
    	SELECT 
			* 
		FROM 
			${schema}.s3m_data_inverter_1_view 
		WHERE 
			view_type = #{viewType} 
			AND device_id = #{deviceId} 
		ORDER BY id LIMIT 1
    </select>
    
    <select id="selectInverterByTypeLastTime" parameterType="map" resultMap="baseResult">
    	SELECT 
			B.* 
		FROM ( 
			SELECT 
				device_id, 
				MAX(id) as id 
			FROM 
				${schema}.s3m_data_inverter_1_view 
			WHERE 
				view_type != 0 
			GROUP BY 
				device_id, view_type, view_time) A 
		INNER JOIN ${schema}.s3m_data_inverter_1_view B ON A.id = B.id
    </select>
    
    <select id="selectInverterLastestTime" parameterType="map" resultMap="baseResult">
    	SELECT 
			* 
		FROM 
			${schema}.s3m_data_inverter_1_view 
		WHERE 
			view_type = 0
    </select>
    
    <update id="updateLastTimeInverter" parameterType="DataInverter1View">
    	UPDATE 
    		${schema}.s3m_data_inverter_1_view 
    	SET	
    		view_time = #{viewTime}, 
    		sent_date = #{sentDate} 
    	WHERE 
    		view_type = 0
    </update>
    
    <update id="updateInverter" parameterType="DataInverter1View">
    	UPDATE 
    		${schema}.s3m_data_inverter_1_view 
    	SET	
    		device_id = #{data.deviceId}, 
    		view_type = #{data.viewType}, 
    		view_time = #{data.viewTime}, 
    		Ptotal = #{data.Ptotal}, 
    		Pdc = #{data.Pdc},
    		Ep = #{data.Ep}
    	WHERE 
    		id = #{data.id}
    </update>
    
    <update id="saveAllInverter" parameterType="DataInverter1View">
    	INSERT INTO ${schema}.s3m_data_inverter_1_view
    		(device_id, view_type, view_time, Ptotal, Pdc, Ep, sent_date)
    	VALUES
          <foreach item="data" collection="datas" separator=",">
          	(#{data.deviceId}, #{data.viewType}, #{data.viewTime}, #{data.Ptotal}, #{data.Pdc}, #{data.Ep}, #{data.sentDate})
          </foreach>
    </update>
</mapper>